
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: spoon
spec:
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 1
    type: RollingUpdate
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      terminationGracePeriodSeconds: 30

      readinessGates:
      - conditionType: target-health.alb.ingress.k8s.aws/nginx-ingress_nginx-service_80
      containers:
      - name: nginx
        image: nginx:stable-alpine3.20-perl
        ports:
        - containerPort: 80
        resources:
          requests:
            cpu: "30m"
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 3

        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 3
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /
            port: 80
          failureThreshold: 15
          periodSeconds: 3


        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 'Container started' >> /var/log/nginx/start.log"]
          preStop:
            exec:
              command: ["/bin/sh", "-c", "echo 'Container stopping' >> /var/log/nginx/stop.log"]
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: spoon
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80

---


apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: nginx-hpa
  namespace: spoon
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deployment
  minReplicas: 2
  maxReplicas: 30
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 30
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 5
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 30
        periodSeconds: 5
      - type: Pods
        value: 5
        periodSeconds: 5
      selectPolicy: Max

